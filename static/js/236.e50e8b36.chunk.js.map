{"version":3,"file":"static/js/236.e50e8b36.chunk.js","mappings":"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","sources":["components/common/container/Container.js","components/common/picture/PictureLeaf.styled.js","components/common/picture/PictureLeaf.jsx","components/dailyCaloriesForm/DailyCaloriesForm.jsx","components/dailyCaloriesForm/DailyCaloriesForm.styled.js","components/rightSideBar/RightSideBar.jsx","components/rightSideBar/RightSideBar.styled.js","page/calculatorPage/CalculatorPage.styled.js","page/calculatorPage/CalculatorPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from '../../../utils/device';\n\nexport const Container = styled.div`\n  // width: 100%;\n  padding-right: 20px;\n  padding-left: 20px;\n  // margin: 0 auto;\n\n  @media (${device.tabletOnly}) {\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n\n  @media (${device.desktop}) {\n    padding-right: 16px;\n    padding-left: 16px;\n  }\n`;\n","import styled from 'styled-components';\nimport imageDesk from '../../../assets/images/summaryImgDesk.png';\nimport imageTab from '../../../assets/images/summaryImgTadl.png';\nimport { device } from '../../../utils/device';\n\nexport const PictureLeafBox = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 70%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-color: #f0f1f3;\n  z-index: -1;\n\n  @media ${device.desktop} {\n    width: 40%;\n    height: 100%;\n    background-position: bottom 100px right 0;\n    background-image: url(${imageDesk});\n  }\n\n  // @media ${device.tabletOnly} {\n  //   background-image: url(${imageTab});\n  // }\n\n  // // @media ${device.mobileOnly} {\n\n  // // }\n  // @media ${device.fabletOnly} {\n  //   background-image: url(${imageTab});\n  // }\n`;\nexport const PictureLeafStyled = styled.div`\n  position: absolute;\n  bottom: 98px;\n  right: 0;\n  width: 100%;\n  height: 60%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom 0 right 0;\n  // background-color: #f0f1f3;\n  z-index: -1;\n\n  @media ${device.desktop} {\n    width: 40%;\n    height: 100%;\n    // background-image: url(${imageDesk});\n  }\n\n  @media ${device.tabletOnly} {\n    background-image: url(${imageTab});\n  }\n\n  // @media ${device.mobileOnly} {\n\n  // }\n  @media ${device.fabletOnly} {\n    height: 35%;\n    background-image: url(${imageTab});\n  }\n`;\n","import { PictureLeafBox, PictureLeafStyled } from './PictureLeaf.styled';\n\nfunction PictureLeaf() {\n  return (\n    <PictureLeafBox>\n      <PictureLeafStyled />\n    </PictureLeafBox>\n  );\n}\nexport default PictureLeaf;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { selectAccessToken } from 'redux/auth/authSelectors';\nimport {\n  selectUDBodyParams,\n  selectUDUserId,\n} from 'redux/userData/userDataSelectors';\nimport {\n  dailyRateAuthorized,\n  dailyRateUnauthorized,\n} from 'redux/userData/userDataOperation';\n\nimport BpRadio, {\n  BloodGroup,\n  BloodText,\n  BloodTextRed,\n  BtnGroup,\n  CalcFormWrapper,\n  ControlLabel,\n  FormContent,\n  FormTitle,\n  InputStyled,\n  MainForm,\n  StyledRadioGroup,\n  UserMainDataWrapper,\n} from './DailyCaloriesForm.styled';\n\nimport Button from 'components/common/button/Button';\n\nfunction DailyCaloriesForm({ openModal }) {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectAccessToken);\n  const userBodyParams = useSelector(selectUDBodyParams);\n  const userId = useSelector(selectUDUserId);\n\n  // ------- Валідація для форми -------\n\n  const validationSchema = Yup.object().shape({\n    height: Yup.number()\n      .min(100, 'Минимальное значение 100 см.')\n      .max(250, 'Максимальное значение 250 см.')\n      .required('Обязательно'),\n    age: Yup.number()\n      .min(18, 'Минимум 18 лет')\n      .max(100, 'Максимум 100 лет')\n      .required('Обязательно'),\n    weight: Yup.number()\n      .min(20, 'Минимум 20 кг.')\n      .max(500, 'Максимум 500 кг.')\n      .required('Обязательно'),\n    desiredWeight: Yup.number()\n      .min(20, 'Минимум 20 кг.')\n      .max(500, 'Максимум 500 кг.')\n      .required('Обязательно')\n      .when('weight', (weight, schema) => {\n        return schema.test({\n          test: desiredWeight => !!weight && desiredWeight < weight,\n          message: 'Желаемый вес должен быть меньше текущего',\n        });\n      }),\n    bloodType: Yup.number().required('Обязательно *'),\n  });\n\n  // ------- формік для матеріал UI -------\n\n  const formik = useFormik({\n    initialValues: {\n      height: userBodyParams?.height ? userBodyParams.height : '',\n      age: userBodyParams?.age ? userBodyParams.age : '',\n      weight: userBodyParams?.weight ? userBodyParams.weight : '',\n      desiredWeight: userBodyParams?.desiredWeight\n        ? userBodyParams.desiredWeight\n        : '',\n      bloodType: userBodyParams?.bloodType\n        ? userBodyParams.bloodType.toString()\n        : '',\n    },\n    validationSchema: validationSchema,\n\n    onSubmit: values => {\n      if (isAuth) {\n        dispatch(dailyRateAuthorized({ userId: userId, ...values }));\n      } else {\n        dispatch(dailyRateUnauthorized(values));\n        if (openModal) {\n          setTimeout(() => {\n            openModal();\n          }, 1000);\n        }\n      }\n    },\n  });\n\n  return (\n    <MainForm onSubmit={formik.handleSubmit}>\n      <FormTitle>Просчитай свою суточную норму калорий прямо сейчас</FormTitle>\n\n      <FormContent>\n        <CalcFormWrapper>\n          <UserMainDataWrapper>\n            <InputStyled\n              required\n              id=\"height\"\n              name=\"height\"\n              label=\"Рост\"\n              type=\"number\"\n              value={formik.values.height}\n              onChange={formik.handleChange}\n              error={formik.touched.height && Boolean(formik.errors.height)}\n              helperText={formik.touched.height && formik.errors.height}\n              variant=\"standard\"\n            />\n            <InputStyled\n              required\n              id=\"age\"\n              name=\"age\"\n              label=\"Возраст\"\n              type=\"number\"\n              value={formik.values.age}\n              onChange={formik.handleChange}\n              error={formik.touched.age && Boolean(formik.errors.age)}\n              helperText={formik.touched.age && formik.errors.age}\n              variant=\"standard\"\n            />\n            <InputStyled\n              required\n              id=\"weight\"\n              name=\"weight\"\n              label=\"Вес\"\n              type=\"number\"\n              value={formik.values.weight}\n              onChange={formik.handleChange}\n              error={formik.touched.weight && Boolean(formik.errors.weight)}\n              helperText={formik.touched.weight && formik.errors.weight}\n              variant=\"standard\"\n            />\n          </UserMainDataWrapper>\n          <UserMainDataWrapper>\n            <InputStyled\n              required\n              id=\"desiredWeight\"\n              name=\"desiredWeight\"\n              label=\"Желаемый вес\"\n              type=\"number\"\n              value={formik.values.desiredWeight}\n              onChange={formik.handleChange}\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              helperText={\n                formik.touched.desiredWeight && formik.errors.desiredWeight\n              }\n              variant=\"standard\"\n            />\n            <BloodGroup>\n              {formik.touched.bloodType && Boolean(formik.errors.bloodType) ? (\n                <BloodTextRed>Группа крови *</BloodTextRed>\n              ) : (\n                <BloodText>Группа крови *</BloodText>\n              )}\n\n              <StyledRadioGroup\n                row\n                required\n                id=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n              >\n                <ControlLabel\n                  name=\"bloodType\"\n                  value=\"1\"\n                  control={<BpRadio />}\n                  label=\"1\"\n                />\n                <ControlLabel\n                  name=\"bloodType\"\n                  value=\"2\"\n                  control={<BpRadio />}\n                  label=\"2\"\n                />\n                <ControlLabel\n                  name=\"bloodType\"\n                  value=\"3\"\n                  control={<BpRadio />}\n                  label=\"3\"\n                />\n                <ControlLabel\n                  name=\"bloodType\"\n                  value=\"4\"\n                  control={<BpRadio />}\n                  label=\"4\"\n                />\n              </StyledRadioGroup>\n              {formik.touched.bloodType && formik.errors.bloodType && (\n                <BloodTextRed>{formik.errors.bloodType}</BloodTextRed>\n              )}\n            </BloodGroup>\n          </UserMainDataWrapper>\n        </CalcFormWrapper>\n        <BtnGroup>\n          <Button type=\"submit\">Похудеть</Button>\n        </BtnGroup>\n      </FormContent>\n    </MainForm>\n  );\n}\n\nexport default DailyCaloriesForm;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { device } from 'utils/device';\n\nconst BpIcon = styled('span')(() => ({\n  borderRadius: '50%',\n  width: 20,\n  height: 20,\n  boxShadow: 'inset 0 0 0 1px #E0E0E0',\n  backgroundColor: '#f5f8fa',\n\n  backgroundImage:\n    'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n  '.Mui-focusVisible &': {\n    outline: '1px auto rgba(19,124,189,.6)',\n    outlineOffset: 2,\n  },\n  'input:hover ~ &': {\n    backgroundColor: '#E0E0E0',\n  },\n}));\n\nconst BpCheckedIcon = styled(BpIcon)({\n  backgroundColor: '#FFFFFF',\n\n  '&:before': {\n    display: 'block',\n    width: 20,\n    height: 20,\n    backgroundImage: 'radial-gradient(#FC842D 35%,transparent 30%)',\n    content: '\"\"',\n  },\n  'input:hover ~ &': {\n    backgroundColor: '#E0E0E0',\n  },\n});\n\n// Inspired by blueprintjs\nexport default function BpRadio(props) {\n  return (\n    <Radio\n      sx={{\n        '&:hover': {\n          bgcolor: 'transparent',\n        },\n      }}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<BpCheckedIcon />}\n      icon={<BpIcon />}\n      {...props}\n    />\n  );\n}\n\nexport const RadioStyled = styled(FormControlLabel)`\n  color: ${p => p.theme.colors.form.checkboxText};\n  font-family: ${x => x.theme.fonts.main}!important;\n  margin: 0;\n`;\n\nexport const FormTitle = styled.h2`\n  font-family: ${x => x.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${x => x.theme.fontWeights.bold};\n  font-size: ${x => x.theme.fontSizes.xl};\n  line-height: ${x => x.theme.lineHeights.title};\n  color: ${x => x.theme.colors.text.sectionTitle};\n  @media ${device.mobileOnly} {\n    font-size: ${x => x.theme.fontSizes.m};\n  }\n`;\n\nexport const MainForm = styled.form`\n  max-width: 608px;\n\n  // @media ${device.mobileOnly} {\n  //   margin-top: 32px;\n\n  // }\n  // @media ${device.fablet} {\n  //   margin-top: 65px;\n\n  // }\n  //  @media ${device.desktop} {\n  //    margin-top: 65px;\n  //    padding-bottom: 65px;\n  // } ;\n`;\n\nexport const InputStyled = styled(TextField)`\n  position: relative;\n  label {\n    font-family: ${x => x.theme.fonts.main};\n    font-style: normal;\n    font-weight: ${x => x.theme.fontWeights.bold};\n    font-size: ${x => x.theme.fontSizes.s};\n    line-height: ${x => x.theme.lineHeights.text};\n    letter-spacing: ${x => x.theme.letterSpacing.l};\n    color: ${x => x.theme.colors.form.formText};\n  }\n  div {\n    &::before {\n      border-bottom: 1px solid ${x => x.theme.colors.form.formInputBorder};\n    }\n\n    input {\n    }\n  }\n  p {\n    font-family: ${x => x.theme.fonts.main};\n    position: absolute;\n    bottom: -25px;\n  }\n`;\nexport const BloodGroup = styled.div`\n  margin-top: 16px;\n  position: relative;\n  ::before {\n    position: absolute;\n    content: '';\n    width: 100%;\n    top: 30px;\n    border-bottom: 1px solid ${x => x.theme.colors.form.formInputBorder};\n  }\n`;\n\nexport const BloodText = styled.span`\n  font-family: ${x => x.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${x => x.theme.fontWeights.bold};\n  font-size: ${x => x.theme.fontSizes.s};\n  line-height: ${x => x.theme.lineHeights.text};\n  letter-spacing: ${x => x.theme.letterSpacing.l};\n  color: ${x => x.theme.colors.form.formText};\n  pointer-events: none;\n`;\nexport const BloodTextRed = styled.span`\n  font-family: ${x => x.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${x => x.theme.fontWeights.bold};\n  font-size: ${x => x.theme.fontSizes.s};\n  line-height: ${x => x.theme.lineHeights.text};\n  letter-spacing: ${x => x.theme.letterSpacing.l};\n  color: red;\n  pointer-events: none;\n`;\n\nexport const StyledRadioGroup = styled(RadioGroup)`\n  margin-top: 10px;\n  width: 100%;\n  gap: 25px;\n  label {\n    margin-right: 0;\n  }\n`;\n\nexport const FormContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 512px;\n`;\n\nexport const CalcFormWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 32px;\n  margin-bottom: 60px;\n  margin-top: 60px;\n\n  @media ${device.mobileOnly} {\n    flex-direction: column;\n  }\n`;\n\nexport const UserMainDataWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 40px;\n  @media ${device.fablet} {\n    max-width: 240px;\n  }\n`;\n\nexport const BtnGroup = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  @media ${device.mobileOnly} {\n    justify-content: center;\n  }\n  @media ${device.fabletOnly} {\n    justify-content: center;\n  }\n  @media ${device.tabletOnly} {\n    justify-content: flex-end;\n  }\n`;\n\nexport const ControlLabel = styled(FormControlLabel)`\n  span {\n    font-family: ${x => x.theme.fonts.main};\n    font-style: normal;\n    font-weight: ${x => x.theme.fontWeights.normal};\n    font-size: ${x => x.theme.fontSizes.s};\n    line-height: ${x => x.theme.lineHeights.form};\n    letter-spacing: ${x => x.theme.letterSpacing.m};\n    color: ${x => x.theme.colors.form.checkboxText};\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  SideBarStyled,\n  Summary,\n  SummaryList,\n  SummaryListItem,\n  SummarySubtitle,\n  SummaryTitle,\n} from './RightSideBar.styled';\nimport { selectUDNotAllowedProducts } from 'redux/userData/userDataSelectors';\nimport {\n  selectUDDaySummary,\n  selectUDDailyRate,\n} from 'redux/userData/userDataSelectors';\nimport { getRandomAllNotAllowedProducts } from 'redux/userData/userDataSelectors';\n\nfunction RightSideBar({ date }) {\n  const dailyRate = useSelector(selectUDDailyRate);\n  const consumption = useSelector(selectUDDaySummary) || {};\n  const notAllowedProducts = useSelector(selectUDNotAllowedProducts) || [];\n\n  const notAllowedList = getRandomAllNotAllowedProducts(notAllowedProducts, 6);\n\n  const { /* kcalLeft, */ kcalConsumed, percentsOfDailyRate } = consumption;\n\n  return (\n    <>\n      <SideBarStyled>\n        <Summary>\n          <SummaryTitle SummaryTitle>{date}</SummaryTitle>\n          <SummaryList>\n            <SummaryListItem>\n              <span>Осталось</span>\n              <span>\n                {dailyRate - kcalConsumed < 0\n                  ? '0 '\n                  : Math.floor(dailyRate - kcalConsumed)}\n                ккал\n              </span>\n            </SummaryListItem>\n            <SummaryListItem>\n              <span>Употреблено</span>\n              <span>{Math.floor(kcalConsumed)} ккал</span>\n            </SummaryListItem>\n            <SummaryListItem>\n              <span>Дневная норма</span>\n              <span>{Math.floor(dailyRate)} ккал</span>\n            </SummaryListItem>\n            <SummaryListItem>\n              <span>% от нормы</span>\n              <span>\n                {percentsOfDailyRate === 100\n                  ? Math.floor((kcalConsumed / dailyRate) * 100)\n                  : Math.floor(percentsOfDailyRate)}\n                %\n              </span>\n            </SummaryListItem>\n          </SummaryList>\n        </Summary>\n        <div>\n          <SummaryTitle>Нерекомендуемые продукты </SummaryTitle>\n          <SummarySubtitle></SummarySubtitle>\n          <ul>\n            {notAllowedList.map((product, index) => (\n              <li key={index}>{product}</li>\n            ))}\n          </ul>\n        </div>\n      </SideBarStyled>\n    </>\n  );\n}\n\nexport default RightSideBar;\n","import styled from 'styled-components';\nimport { device } from 'utils/device';\nexport const SideBarStyled = styled.div`\n  @media ${device.tablet} {\n    display: flex;\n    gap: 60px;\n  }\n\n  @media ${device.desktop} {\n    flex-direction: column;\n    padding-left: 94px;\n  }\n`;\n\nexport const Summary = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const SummaryTitle = styled.p`\n  margin-bottom: 30px;\n  font-size: 14px;\n  line-height: 17px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  letter-spacing: 0.04em;\n  color: #212121;\n`;\n\nexport const SummarySubtitle = styled.p`\n  width: 270px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\n\nexport const SummaryList = styled.ul`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  width: 288px;\n  color: #9b9faa;\n`;\n\nexport const SummaryListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const SideBar = styled.div`\n  @media ${device.mobileOnly} {\n    margin-top: 40px;\n  }\n\n  @media ${device.tabletOnly} {\n    margin-top: 40px;\n  }\n\n  @media ${device.fabletOnly} {\n    margin-top: 50px;\n  }\n\n  @media ${device.desktop} {\n    padding: 10px 10px 10px 10px;\n    margin-top: 100px;\n    margin-bottom: 189px;\n  }\n`;\n","import styled from 'styled-components';\nimport { device } from 'utils/device';\n\nexport const CalculatorBox = styled.div`\n  @media ${device.desktop} {\n    display: flex;\n  }\n`;\n\nexport const Calculator = styled.div`\n  background-color: white;\n  padding-bottom: 20px;\n  @media ${device.fablet} {\n  }\n\n  @media ${device.desktop} {\n    width: 60%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectAccessToken } from 'redux/auth/authSelectors';\nimport { Container } from 'components/common/container/Container';\nimport RightSideBar from 'components/rightSideBar/RightSideBar';\nimport PictureLeaf from 'components/common/picture/PictureLeaf';\nimport DailyCaloriesForm from 'components/dailyCaloriesForm/DailyCaloriesForm';\n\nimport { Calculator, CalculatorBox } from './CalculatorPage.styled';\nimport { SideBar } from 'components/rightSideBar/RightSideBar.styled';\n\nfunction CalculatorPage() {\n  const isAuth = useSelector(selectAccessToken);\n\n  let yourDate = new Date(Date.now());\n  const offset = yourDate.getTimezoneOffset();\n  yourDate = new Date(yourDate.getTime() - offset * 60 * 1000);\n  const formatDate = yourDate.toISOString().split('T')[0];\n\n  return (\n    <>\n      <CalculatorBox>\n        <Calculator>\n          <Container>\n            <DailyCaloriesForm />\n          </Container>\n        </Calculator>\n        {isAuth && (\n          <Container>\n            <SideBar>\n              <RightSideBar date={formatDate} />\n            </SideBar>\n          </Container>\n        )}\n      </CalculatorBox>\n      <PictureLeaf />\n    </>\n  );\n}\n\nexport default CalculatorPage;\n"],"names":["Container","styled","device","PictureLeafBox","imageDesk","imageTab","PictureLeafStyled","openModal","dispatch","useDispatch","isAuth","useSelector","selectAccessToken","userBodyParams","selectUDBodyParams","userId","selectUDUserId","validationSchema","Yup","shape","height","min","max","required","age","weight","desiredWeight","when","schema","test","message","bloodType","formik","useFormik","initialValues","toString","onSubmit","values","dailyRateAuthorized","dailyRateUnauthorized","setTimeout","handleSubmit","id","name","label","type","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","row","control","BpIcon","borderRadius","width","boxShadow","backgroundColor","backgroundImage","outline","outlineOffset","BpCheckedIcon","display","content","BpRadio","props","sx","bgcolor","disableRipple","color","checkedIcon","icon","FormControlLabel","p","theme","colors","form","checkboxText","x","fonts","main","FormTitle","fontWeights","bold","fontSizes","xl","lineHeights","title","text","sectionTitle","m","MainForm","InputStyled","TextField","s","letterSpacing","l","formText","formInputBorder","BloodGroup","BloodText","BloodTextRed","StyledRadioGroup","RadioGroup","FormContent","CalcFormWrapper","UserMainDataWrapper","BtnGroup","ControlLabel","normal","date","dailyRate","selectUDDailyRate","consumption","selectUDDaySummary","notAllowedProducts","selectUDNotAllowedProducts","notAllowedList","getRandomAllNotAllowedProducts","kcalConsumed","percentsOfDailyRate","SummaryTitle","Math","floor","map","product","index","SideBarStyled","Summary","SummarySubtitle","SummaryList","SummaryListItem","SideBar","CalculatorBox","Calculator","yourDate","Date","now","offset","getTimezoneOffset","formatDate","getTime","toISOString","split","DailyCaloriesForm","RightSideBar","PictureLeaf"],"sourceRoot":""}